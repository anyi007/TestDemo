package com.example.lql.testdemo.db.gen;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.example.lql.testdemo.db.bean.shop.AddressBean;
import com.example.lql.testdemo.db.bean.shop.CollectionBean;
import com.example.lql.testdemo.db.bean.shop.CommodityBean;
import com.example.lql.testdemo.db.bean.shop.CommoditySizeBean;
import com.example.lql.testdemo.db.bean.shop.CommodityTypeBean;
import com.example.lql.testdemo.db.bean.shop.EvaluateBean;
import com.example.lql.testdemo.db.bean.shop.LogisticsBean;
import com.example.lql.testdemo.db.bean.shop.NoticeBean;
import com.example.lql.testdemo.db.bean.shop.OrderBean;
import com.example.lql.testdemo.db.bean.shop.ShoppingCartBean;
import com.example.lql.testdemo.db.bean.shop.UserBean;
import com.example.lql.testdemo.db.bean.TimingBean;

import com.example.lql.testdemo.db.gen.AddressBeanDao;
import com.example.lql.testdemo.db.gen.CollectionBeanDao;
import com.example.lql.testdemo.db.gen.CommodityBeanDao;
import com.example.lql.testdemo.db.gen.CommoditySizeBeanDao;
import com.example.lql.testdemo.db.gen.CommodityTypeBeanDao;
import com.example.lql.testdemo.db.gen.EvaluateBeanDao;
import com.example.lql.testdemo.db.gen.LogisticsBeanDao;
import com.example.lql.testdemo.db.gen.NoticeBeanDao;
import com.example.lql.testdemo.db.gen.OrderBeanDao;
import com.example.lql.testdemo.db.gen.ShoppingCartBeanDao;
import com.example.lql.testdemo.db.gen.UserBeanDao;
import com.example.lql.testdemo.db.gen.TimingBeanDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig addressBeanDaoConfig;
    private final DaoConfig collectionBeanDaoConfig;
    private final DaoConfig commodityBeanDaoConfig;
    private final DaoConfig commoditySizeBeanDaoConfig;
    private final DaoConfig commodityTypeBeanDaoConfig;
    private final DaoConfig evaluateBeanDaoConfig;
    private final DaoConfig logisticsBeanDaoConfig;
    private final DaoConfig noticeBeanDaoConfig;
    private final DaoConfig orderBeanDaoConfig;
    private final DaoConfig shoppingCartBeanDaoConfig;
    private final DaoConfig userBeanDaoConfig;
    private final DaoConfig timingBeanDaoConfig;

    private final AddressBeanDao addressBeanDao;
    private final CollectionBeanDao collectionBeanDao;
    private final CommodityBeanDao commodityBeanDao;
    private final CommoditySizeBeanDao commoditySizeBeanDao;
    private final CommodityTypeBeanDao commodityTypeBeanDao;
    private final EvaluateBeanDao evaluateBeanDao;
    private final LogisticsBeanDao logisticsBeanDao;
    private final NoticeBeanDao noticeBeanDao;
    private final OrderBeanDao orderBeanDao;
    private final ShoppingCartBeanDao shoppingCartBeanDao;
    private final UserBeanDao userBeanDao;
    private final TimingBeanDao timingBeanDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        addressBeanDaoConfig = daoConfigMap.get(AddressBeanDao.class).clone();
        addressBeanDaoConfig.initIdentityScope(type);

        collectionBeanDaoConfig = daoConfigMap.get(CollectionBeanDao.class).clone();
        collectionBeanDaoConfig.initIdentityScope(type);

        commodityBeanDaoConfig = daoConfigMap.get(CommodityBeanDao.class).clone();
        commodityBeanDaoConfig.initIdentityScope(type);

        commoditySizeBeanDaoConfig = daoConfigMap.get(CommoditySizeBeanDao.class).clone();
        commoditySizeBeanDaoConfig.initIdentityScope(type);

        commodityTypeBeanDaoConfig = daoConfigMap.get(CommodityTypeBeanDao.class).clone();
        commodityTypeBeanDaoConfig.initIdentityScope(type);

        evaluateBeanDaoConfig = daoConfigMap.get(EvaluateBeanDao.class).clone();
        evaluateBeanDaoConfig.initIdentityScope(type);

        logisticsBeanDaoConfig = daoConfigMap.get(LogisticsBeanDao.class).clone();
        logisticsBeanDaoConfig.initIdentityScope(type);

        noticeBeanDaoConfig = daoConfigMap.get(NoticeBeanDao.class).clone();
        noticeBeanDaoConfig.initIdentityScope(type);

        orderBeanDaoConfig = daoConfigMap.get(OrderBeanDao.class).clone();
        orderBeanDaoConfig.initIdentityScope(type);

        shoppingCartBeanDaoConfig = daoConfigMap.get(ShoppingCartBeanDao.class).clone();
        shoppingCartBeanDaoConfig.initIdentityScope(type);

        userBeanDaoConfig = daoConfigMap.get(UserBeanDao.class).clone();
        userBeanDaoConfig.initIdentityScope(type);

        timingBeanDaoConfig = daoConfigMap.get(TimingBeanDao.class).clone();
        timingBeanDaoConfig.initIdentityScope(type);

        addressBeanDao = new AddressBeanDao(addressBeanDaoConfig, this);
        collectionBeanDao = new CollectionBeanDao(collectionBeanDaoConfig, this);
        commodityBeanDao = new CommodityBeanDao(commodityBeanDaoConfig, this);
        commoditySizeBeanDao = new CommoditySizeBeanDao(commoditySizeBeanDaoConfig, this);
        commodityTypeBeanDao = new CommodityTypeBeanDao(commodityTypeBeanDaoConfig, this);
        evaluateBeanDao = new EvaluateBeanDao(evaluateBeanDaoConfig, this);
        logisticsBeanDao = new LogisticsBeanDao(logisticsBeanDaoConfig, this);
        noticeBeanDao = new NoticeBeanDao(noticeBeanDaoConfig, this);
        orderBeanDao = new OrderBeanDao(orderBeanDaoConfig, this);
        shoppingCartBeanDao = new ShoppingCartBeanDao(shoppingCartBeanDaoConfig, this);
        userBeanDao = new UserBeanDao(userBeanDaoConfig, this);
        timingBeanDao = new TimingBeanDao(timingBeanDaoConfig, this);

        registerDao(AddressBean.class, addressBeanDao);
        registerDao(CollectionBean.class, collectionBeanDao);
        registerDao(CommodityBean.class, commodityBeanDao);
        registerDao(CommoditySizeBean.class, commoditySizeBeanDao);
        registerDao(CommodityTypeBean.class, commodityTypeBeanDao);
        registerDao(EvaluateBean.class, evaluateBeanDao);
        registerDao(LogisticsBean.class, logisticsBeanDao);
        registerDao(NoticeBean.class, noticeBeanDao);
        registerDao(OrderBean.class, orderBeanDao);
        registerDao(ShoppingCartBean.class, shoppingCartBeanDao);
        registerDao(UserBean.class, userBeanDao);
        registerDao(TimingBean.class, timingBeanDao);
    }
    
    public void clear() {
        addressBeanDaoConfig.getIdentityScope().clear();
        collectionBeanDaoConfig.getIdentityScope().clear();
        commodityBeanDaoConfig.getIdentityScope().clear();
        commoditySizeBeanDaoConfig.getIdentityScope().clear();
        commodityTypeBeanDaoConfig.getIdentityScope().clear();
        evaluateBeanDaoConfig.getIdentityScope().clear();
        logisticsBeanDaoConfig.getIdentityScope().clear();
        noticeBeanDaoConfig.getIdentityScope().clear();
        orderBeanDaoConfig.getIdentityScope().clear();
        shoppingCartBeanDaoConfig.getIdentityScope().clear();
        userBeanDaoConfig.getIdentityScope().clear();
        timingBeanDaoConfig.getIdentityScope().clear();
    }

    public AddressBeanDao getAddressBeanDao() {
        return addressBeanDao;
    }

    public CollectionBeanDao getCollectionBeanDao() {
        return collectionBeanDao;
    }

    public CommodityBeanDao getCommodityBeanDao() {
        return commodityBeanDao;
    }

    public CommoditySizeBeanDao getCommoditySizeBeanDao() {
        return commoditySizeBeanDao;
    }

    public CommodityTypeBeanDao getCommodityTypeBeanDao() {
        return commodityTypeBeanDao;
    }

    public EvaluateBeanDao getEvaluateBeanDao() {
        return evaluateBeanDao;
    }

    public LogisticsBeanDao getLogisticsBeanDao() {
        return logisticsBeanDao;
    }

    public NoticeBeanDao getNoticeBeanDao() {
        return noticeBeanDao;
    }

    public OrderBeanDao getOrderBeanDao() {
        return orderBeanDao;
    }

    public ShoppingCartBeanDao getShoppingCartBeanDao() {
        return shoppingCartBeanDao;
    }

    public UserBeanDao getUserBeanDao() {
        return userBeanDao;
    }

    public TimingBeanDao getTimingBeanDao() {
        return timingBeanDao;
    }

}
